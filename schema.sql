-- Create the products table
CREATE TABLE public.products (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    description text,
    price numeric NOT NULL CHECK (price >= 0),
    image_url text,
    created_at timestamptz DEFAULT now() NOT NULL
);

-- Add some comments to the table and columns for clarity
COMMENT ON TABLE public.products IS 'Stores product information';
COMMENT ON COLUMN public.products.name IS 'The name of the product';
COMMENT ON COLUMN public.products.description IS 'A detailed description of the product';
COMMENT ON COLUMN public.products.price IS 'The price of the product';
COMMENT ON COLUMN public.products.image_url IS 'URL for the product image';
COMMENT ON COLUMN public.products.created_at IS 'The date and time the product was created';


-- Insert sample data into the products table
INSERT INTO public.products (name, description, price, image_url)
VALUES
('Laptop Pro', 'A powerful laptop for professionals with a 15-inch screen and 16GB RAM.', 1299.99, 'https://example.com/images/laptop-pro.jpg'),
('Wireless Mouse', 'Ergonomic wireless mouse with a long-lasting battery.', 49.99, 'https://example.com/images/wireless-mouse.jpg'),
('Mechanical Keyboard', 'A backlit mechanical keyboard with customizable RGB.', 149.50, 'https://example.com/images/keyboard.jpg'),
('4K Monitor', 'A 27-inch 4K UHD monitor with vibrant colors.', 349.00, 'https://example.com/images/4k-monitor.jpg');

-- =============================================================================
-- Souvenirs and Digital Memories Tables
-- =============================================================================

-- Create the souvenirs table
-- This table stores information about souvenirs, which are linked to a product.
CREATE TABLE public.souvenirs (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name text NOT NULL,
    description text,
    public_url text UNIQUE,
    product_id bigint REFERENCES public.products(id) ON DELETE SET NULL,
    created_at timestamptz DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.souvenirs IS 'Stores souvenir information, linked to a purchased product.';
COMMENT ON COLUMN public.souvenirs.public_url IS 'A unique public URL for sharing the souvenir.';
COMMENT ON COLUMN public.souvenirs.product_id IS 'Links to the product that this souvenir is associated with.';

-- Create a custom type for the different types of digital memories
CREATE TYPE public.digital_file_type AS ENUM ('image', 'video', 'audio', 'note');

-- Create the digital_memories table
-- This table stores files and notes associated with a specific souvenir.
CREATE TABLE public.digital_memories (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
    souvenir_id bigint REFERENCES public.souvenirs(id) ON DELETE CASCADE NOT NULL,
    file_url text NOT NULL,
    file_type public.digital_file_type NOT NULL,
    created_at timestamptz DEFAULT now() NOT NULL
);
COMMENT ON TABLE public.digital_memories IS 'Stores digital files and notes associated with a souvenir.';
COMMENT ON COLUMN public.digital_memories.user_id IS 'The user who owns this memory.';
COMMENT ON COLUMN public.digital_memories.souvenir_id IS 'The souvenir this memory belongs to.';
COMMENT ON COLUMN public.digital_memories.file_url IS 'URL of the stored digital file (image, video, audio) or content for a note.';
COMMENT ON COLUMN public.digital_memories.file_type IS 'The type of the digital memory.';

-- Enable Row Level Security (RLS) for the new tables
ALTER TABLE public.souvenirs ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.digital_memories ENABLE ROW LEVEL SECURITY;

-- Note: RLS policies are not created here. You would typically create policies
-- that allow users to access only their own souvenirs and memories.